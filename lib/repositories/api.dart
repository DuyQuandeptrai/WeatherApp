import 'package:appweather/models/weather.dart';
import 'package:dio/dio.dart';
import 'package:geolocator/geolocator.dart';

class Api {
  static const String apiKey = "19ac7829a869247d650a1a27417d1020";
  static final Dio dio = Dio();

  /// üå§ **H√†m l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt hi·ªán t·∫°i**
  static Future<WeatherData> callApi(
      {Position? position, String? cityName}) async {
    try {
      String url;

      if (cityName != null) {
        url =
            'https://api.openweathermap.org/data/2.5/weather?q=$cityName&units=metric&appid=$apiKey';
      } else if (position != null) {
        url =
            'https://api.openweathermap.org/data/2.5/weather?lat=${position.latitude}&lon=${position.longitude}&units=metric&appid=$apiKey';
      } else {
        throw Exception("Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ l·∫•y th·ªùi ti·∫øt");
      }

      final res = await dio.get(url);
      return WeatherData.fromMap(res.data);
    } on DioException catch (e) {
      return _handleDioError(e);
    } catch (e) {
      print("‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: $e");
      rethrow;
    }
  }

  /// üìÖ **H√†m l·∫•y d·ªØ li·ªáu d·ª± b√°o 5 ng√†y**
  static Future<List<WeatherDetail>> callApiDetail(
      {Position? position, String? cityName}) async {
    try {
      String url;

      if (cityName != null) {
        url =
            'https://api.openweathermap.org/data/2.5/forecast?q=$cityName&units=metric&appid=$apiKey';
      } else if (position != null) {
        url =
            'https://api.openweathermap.org/data/2.5/forecast?lat=${position.latitude}&lon=${position.longitude}&units=metric&appid=$apiKey';
      } else {
        throw Exception("Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ l·∫•y d·ª± b√°o th·ªùi ti·∫øt");
      }

      final res = await dio.get(url);
      List<dynamic> dataList = res.data['list'] ?? [];

      return dataList.map((e) => WeatherDetail.fromMap(e)).toList();
    } on DioException catch (e) {
      return _handleDioError(e);
    } catch (e) {
      print("‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: $e");
      rethrow;
    }
  }

  /// üö® **X·ª≠ l√Ω l·ªói t·ª´ API**
  static _handleDioError(DioException e) {
    if (e.response != null) {
      switch (e.response!.statusCode) {
        case 404:
          throw Exception("‚ùå Kh√¥ng t√¨m th·∫•y ƒë·ªãa ƒëi·ªÉm.");
        case 429:
          throw Exception("‚ö†Ô∏è Qu√° nhi·ªÅu y√™u c·∫ßu, h√£y th·ª≠ l·∫°i sau.");
        case 500:
          throw Exception("üí• L·ªói m√°y ch·ªß, vui l√≤ng th·ª≠ l·∫°i.");
        default:
          throw Exception("L·ªói API: ${e.response!.statusCode}");
      }
    } else {
      throw Exception("üö´ Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.");
    }
  }
}
